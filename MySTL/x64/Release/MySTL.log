  test.cpp
F:\c++ project\my_tiny_stl\MySTL\mystl_alloc.h(113,24): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(277,1): warning C4099: “mystl::hashtable”: 类型名称以前使用“struct”现在使用的是“class”
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(35,8): message : 参见“mystl::hashtable”的声明
F:\visual studio\VC\Tools\MSVC\14.37.32822\include\utility(36,27): warning C4244: “参数”: 从“const _Ty”转换到“const T”，可能丢失数据
          with
          [
              _Ty=double
          ]
          and
          [
              T=int
          ]
F:\c++ project\my_tiny_stl\MySTL\algorithm_test.h(55,2): message : 查看对正在编译的函数 模板 实例化“const _Ty &std::max<double,mystl::greater<int>>(const _Ty &,const _Ty &,_Pr) noexcept(<expr>)”的引用
          with
          [
              _Ty=double,
              _Pr=mystl::greater<int>
          ]
F:\visual studio\VC\Tools\MSVC\14.37.32822\include\utility(36,20): warning C4244: “参数”: 从“const _Ty”转换到“const T”，可能丢失数据
          with
          [
              _Ty=double
          ]
          and
          [
              T=int
          ]
F:\visual studio\VC\Tools\MSVC\14.37.32822\include\utility(59,28): warning C4244: “参数”: 从“const _Ty”转换到“const T”，可能丢失数据
          with
          [
              _Ty=double
          ]
          and
          [
              T=int
          ]
F:\c++ project\my_tiny_stl\MySTL\algorithm_test.h(65,2): message : 查看对正在编译的函数 模板 实例化“const _Ty &std::min<double,mystl::less<int>>(const _Ty &,const _Ty &,_Pr) noexcept(<expr>)”的引用
          with
          [
              _Ty=double,
              _Pr=mystl::less<int>
          ]
F:\visual studio\VC\Tools\MSVC\14.37.32822\include\utility(59,20): warning C4244: “参数”: 从“const _Ty”转换到“const T”，可能丢失数据
          with
          [
              _Ty=double
          ]
          and
          [
              T=int
          ]
F:\c++ project\my_tiny_stl\MySTL\algorithm_test.h(760,13): warning C4858: 正在放弃返回值: The 'remove' and 'remove_if' algorithms return the iterator past the last element that should be kept. You need to call container.erase(result, container.end()) afterwards. In C++20, 'std::erase' and 'std::erase_if' are simpler replacements for these two steps.
F:\c++ project\my_tiny_stl\MySTL\algorithm_test.h(763,13): warning C4858: 正在放弃返回值: The 'remove' and 'remove_if' algorithms return the iterator past the last element that should be kept. You need to call container.erase(result, container.end()) afterwards. In C++20, 'std::erase' and 'std::erase_if' are simpler replacements for these two steps.
F:\c++ project\my_tiny_stl\MySTL\algorithm_test.h(797,16): warning C4858: 正在放弃返回值: The 'remove' and 'remove_if' algorithms return the iterator past the last element that should be kept. You need to call container.erase(result, container.end()) afterwards. In C++20, 'std::erase' and 'std::erase_if' are simpler replacements for these two steps.
F:\c++ project\my_tiny_stl\MySTL\algorithm_test.h(1195,13): warning C4858: 正在放弃返回值: The 'unique' algorithm returns the iterator past the last element that should be kept. You need to call container.erase(result, container.end()) afterwards.
F:\c++ project\my_tiny_stl\MySTL\algorithm_test.h(1197,13): warning C4858: 正在放弃返回值: The 'unique' algorithm returns the iterator past the last element that should be kept. You need to call container.erase(result, container.end()) afterwards.
F:\c++ project\my_tiny_stl\MySTL\algorithm_performance_test.h(61,2): warning C4834: 放弃具有 "nodiscard" 属性的函数的返回值
F:\c++ project\my_tiny_stl\MySTL\algorithm_performance_test.h(62,2): warning C4834: 放弃具有 "nodiscard" 属性的函数的返回值
F:\c++ project\my_tiny_stl\MySTL\algorithm_performance_test.h(63,2): warning C4834: 放弃具有 "nodiscard" 属性的函数的返回值
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(139,24): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(133,12): message : 在编译 类 模板 成员函数“mystl::hashtable_iterator<Value,Key,HashFcn,ExtractKey,EqualKey,Alloc> &mystl::hashtable_iterator<Value,Key,HashFcn,ExtractKey,EqualKey,Alloc>::operator ++(void)”时
          with
          [
              Value=mystl::pair<const int,int>,
              Key=int,
              HashFcn=mystl::hash<int>,
              ExtractKey=mystl::Select1st<mystl::pair<const int,int>>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_map_test.h(38,2): message : 请参阅 "mystl::unordered_map_test::unorder_map_test" 中对 "mystl::hashtable_iterator<Value,Key,HashFcn,ExtractKey,EqualKey,Alloc>::operator ++" 的第一个引用
          with
          [
              Value=mystl::pair<const int,int>,
              Key=int,
              HashFcn=mystl::hash<int>,
              ExtractKey=mystl::Select1st<mystl::pair<const int,int>>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\mystl_pair.h(13,13): message : 查看对正在编译的 类 模板 实例化“mystl::hashtable_iterator<Value,Key,HashFcn,ExtractKey,EqualKey,Alloc>”的引用
          with
          [
              Value=mystl::pair<const int,int>,
              Key=int,
              HashFcn=mystl::hash<int>,
              ExtractKey=mystl::Select1st<mystl::pair<const int,int>>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_map_test.h(38,2): message : 查看对正在编译的 类 模板 实例化“mystl::pair<mystl::hashtable_iterator<Value,Key,HashFcn,ExtractKey,EqualKey,Alloc>,bool>”的引用
          with
          [
              Value=mystl::pair<const int,int>,
              Key=int,
              HashFcn=mystl::hash<int>,
              ExtractKey=mystl::Select1st<mystl::pair<const int,int>>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(412,31): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(410,12): message : 在编译 类 模板 成员函数“mystl::hashtable<mystl::pair<const Key,T>,Key,HashFcn,mystl::Select1st<mystl::pair<const Key,T>>,EqualKey,Alloc>::size_type mystl::hashtable<mystl::pair<const Key,T>,Key,HashFcn,mystl::Select1st<mystl::pair<const Key,T>>,EqualKey,Alloc>::elems_in_bucket(mystl::hashtable<mystl::pair<const Key,T>,Key,HashFcn,mystl::Select1st<mystl::pair<const Key,T>>,EqualKey,Alloc>::size_type) const”时
          with
          [
              Key=int,
              T=int,
              HashFcn=mystl::hash<int>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_map.h(440,3): message : 请参阅 "mystl::unordered_multimap<int,int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::elems_in_bucket" 中对 "mystl::hashtable<mystl::pair<const Key,T>,Key,HashFcn,mystl::Select1st<mystl::pair<const Key,T>>,EqualKey,Alloc>::elems_in_bucket" 的第一个引用
          with
          [
              Value=int
          ]
          and
          [
              Key=int,
              T=int,
              HashFcn=mystl::hash<int>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_map_test.h(167,2): message : 请参阅 "mystl::unordered_map_test::unordered_multimap_test" 中对 "mystl::unordered_multimap<int,int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::elems_in_bucket" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_map.h(25,5): message : 查看对正在编译的 类 模板 实例化“mystl::hashtable<mystl::pair<const Key,T>,Key,HashFcn,mystl::Select1st<mystl::pair<const Key,T>>,EqualKey,Alloc>”的引用
          with
          [
              Key=int,
              T=int,
              HashFcn=mystl::hash<int>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_map_test.h(19,33): message : 查看对正在编译的 类 模板 实例化“mystl::unordered_map<int,int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>”的引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(544,26): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(542,70): message : 在编译 类 模板 成员函数“mystl::hashtable_iterator<Value,Key,HashFcn,ExtractKey,EqualKey,Alloc> mystl::hashtable<Value,Key,HashFcn,ExtractKey,EqualKey,Alloc>::begin(void)”时
          with
          [
              Value=int,
              Key=int,
              HashFcn=mystl::hash<int>,
              ExtractKey=mystl::identity<int>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set.h(348,3): message : 请参阅 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::begin" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::begin" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set_test.h(121,2): message : 请参阅 "mystl::unordered_set_test::unordered_multiset_test" 中对 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::begin" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(783,26): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(779,93): message : 在编译 类 模板 成员函数“void mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::erase(const mystl::hashtable_iterator<Value,Key,HashFcn,ExtractKey,EqualKey,Alloc> &)”时
          with
          [
              Value=int,
              HashFcn=mystl::hash<int>,
              Key=int,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc,
              ExtractKey=mystl::identity<int>
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set.h(431,11): message : 请参阅 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::erase" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::erase" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set_test.h(125,2): message : 请参阅 "mystl::unordered_set_test::unordered_multiset_test" 中对 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::erase" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(785,12): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(750,27): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(747,89): message : 在编译 类 模板 成员函数“mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::size_type mystl::hashtable<Value,Key,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::erase(const int &)”时
          with
          [
              Value=int,
              HashFcn=mystl::hash<int>,
              Key=int,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set.h(427,3): message : 请参阅 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::erase" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::erase" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set_test.h(127,2): message : 请参阅 "mystl::unordered_set_test::unordered_multiset_test" 中对 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::erase" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(768,12): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(842,27): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(840,75): message : 在编译 类 模板 成员函数“void mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::clear(void)”时
          with
          [
              Value=int,
              HashFcn=mystl::hash<int>,
              Key=int,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set.h(439,11): message : 请参阅 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::clear" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::clear" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set_test.h(137,2): message : 请参阅 "mystl::unordered_set_test::unordered_multiset_test" 中对 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::clear" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(848,11): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(903,25): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(900,95): message : 在编译 类 模板 成员函数“mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::size_type mystl::hashtable<Value,Key,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::count(const int &) const”时
          with
          [
              Value=int,
              HashFcn=mystl::hash<int>,
              Key=int,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set.h(452,3): message : 请参阅 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::count" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::count" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set_test.h(163,2): message : 请参阅 "mystl::unordered_set_test::unordered_multiset_test" 中对 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::count" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(878,27): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(876,88): message : 在编译 类 模板 成员函数“mystl::hashtable_iterator<Value,Key,HashFcn,ExtractKey,EqualKey,Alloc> mystl::hashtable<Value,Key,HashFcn,ExtractKey,EqualKey,Alloc>::find(const int &)”时
          with
          [
              Value=int,
              Key=int,
              HashFcn=mystl::hash<int>,
              ExtractKey=mystl::identity<int>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set.h(444,3): message : 请参阅 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::find" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::find" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set_test.h(126,2): message : 请参阅 "mystl::unordered_set_test::unordered_multiset_test" 中对 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::find" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(917,27): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(915,96): message : 在编译 类 模板 成员函数“mystl::pair<mystl::hashtable_iterator<Value,Key,HashFcn,ExtractKey,EqualKey,Alloc>,mystl::hashtable_iterator<Value,Key,HashFcn,ExtractKey,EqualKey,Alloc>> mystl::hashtable<Value,Key,HashFcn,ExtractKey,EqualKey,Alloc>::equal_range(const int &)”时
          with
          [
              Value=int,
              Key=int,
              HashFcn=mystl::hash<int>,
              ExtractKey=mystl::identity<int>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set.h(456,3): message : 请参阅 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::equal_range" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::equal_range" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set_test.h(167,13): message : 请参阅 "mystl::unordered_set_test::unordered_multiset_test" 中对 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::equal_range" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(925,17): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(926,85): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(979,30): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(973,98): message : 在编译 类 模板 成员函数“void mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::copy_from(const mystl::hashtable<Value,Key,HashFcn,mystl::identity<Key>,EqualKey,Alloc> &)”时
          with
          [
              Value=int,
              HashFcn=mystl::hash<int>,
              Key=int,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(365,13): message : 请参阅 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::operator =" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::copy_from" 的第一个引用
          with
          [
              Value=int,
              HashFcn=mystl::hash<int>,
              Key=int,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set.h(333,7): message : 请参阅 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::operator =" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::operator =" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set_test.h(113,7): message : 请参阅 "mystl::unordered_set_test::unordered_multiset_test" 中对 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::operator =" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(982,13): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(861,27): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(858,102): message : 在编译 类 模板 成员函数“mystl::pair<const Key,T> &mystl::hashtable<mystl::pair<const Key,T>,Key,HashFcn,mystl::Select1st<mystl::pair<const Key,T>>,EqualKey,Alloc>::find_or_insert(const mystl::pair<const Key,T> &)”时
          with
          [
              Key=int,
              T=int,
              HashFcn=mystl::hash<int>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_map.h(241,3): message : 请参阅 "mystl::unordered_map<int,int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::operator []" 中对 "mystl::hashtable<mystl::pair<const Key,T>,Key,HashFcn,mystl::Select1st<mystl::pair<const Key,T>>,EqualKey,Alloc>::find_or_insert" 的第一个引用
          with
          [
              Value=int
          ]
          and
          [
              Key=int,
              T=int,
              HashFcn=mystl::hash<int>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_map_test.h(64,2): message : 请参阅 "mystl::unordered_map_test::unorder_map_test" 中对 "mystl::unordered_map<int,int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::operator []" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(868,10): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\visual studio\VC\Tools\MSVC\14.37.32822\include\utility(38,25): warning C4244: “参数”: 从“const _Ty”转换到“const T”，可能丢失数据
          with
          [
              _Ty=double
          ]
          and
          [
              T=int
          ]
F:\c++ project\my_tiny_stl\MySTL\algorithm_test.h(55,2): message : 查看对正在编译的函数 模板 实例化“const _Ty &std::max<double,mystl::greater<int>>(const _Ty &,const _Ty &,_Pr) noexcept(false)”的引用
          with
          [
              _Ty=double,
              _Pr=mystl::greater<int>
          ]
F:\visual studio\VC\Tools\MSVC\14.37.32822\include\utility(38,18): warning C4244: “参数”: 从“const _Ty”转换到“const T”，可能丢失数据
          with
          [
              _Ty=double
          ]
          and
          [
              T=int
          ]
F:\c++ project\my_tiny_stl\MySTL\algobase.h(48,19): warning C4244: “参数”: 从“const T”转换到“const T”，可能丢失数据
          with
          [
              T=double
          ]
          and
          [
              T=int
          ]
F:\c++ project\my_tiny_stl\MySTL\algorithm_test.h(55,2): message : 查看对正在编译的函数 模板 实例化“const T &mystl::max<double,mystl::greater<int>>(const T &,const T &,Compare)”的引用
          with
          [
              T=double,
              Compare=mystl::greater<int>
          ]
F:\c++ project\my_tiny_stl\MySTL\algobase.h(48,14): warning C4244: “参数”: 从“const T”转换到“const T”，可能丢失数据
          with
          [
              T=double
          ]
          and
          [
              T=int
          ]
F:\visual studio\VC\Tools\MSVC\14.37.32822\include\utility(61,26): warning C4244: “参数”: 从“const _Ty”转换到“const T”，可能丢失数据
          with
          [
              _Ty=double
          ]
          and
          [
              T=int
          ]
F:\c++ project\my_tiny_stl\MySTL\algorithm_test.h(65,2): message : 查看对正在编译的函数 模板 实例化“const _Ty &std::min<double,mystl::less<int>>(const _Ty &,const _Ty &,_Pr) noexcept(false)”的引用
          with
          [
              _Ty=double,
              _Pr=mystl::less<int>
          ]
F:\visual studio\VC\Tools\MSVC\14.37.32822\include\utility(61,18): warning C4244: “参数”: 从“const _Ty”转换到“const T”，可能丢失数据
          with
          [
              _Ty=double
          ]
          and
          [
              T=int
          ]
F:\c++ project\my_tiny_stl\MySTL\algobase.h(62,19): warning C4244: “参数”: 从“const T”转换到“const T”，可能丢失数据
          with
          [
              T=double
          ]
          and
          [
              T=int
          ]
F:\c++ project\my_tiny_stl\MySTL\algorithm_test.h(65,2): message : 查看对正在编译的函数 模板 实例化“const T &mystl::min<double,mystl::less<int>>(const T &,const T &,Compare)”的引用
          with
          [
              T=double,
              Compare=mystl::less<int>
          ]
F:\c++ project\my_tiny_stl\MySTL\algobase.h(62,14): warning C4244: “参数”: 从“const T”转换到“const T”，可能丢失数据
          with
          [
              T=double
          ]
          and
          [
              T=int
          ]
F:\c++ project\my_tiny_stl\MySTL\algo.h(1246,40): warning C4244: “参数”: 从“__int64”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\algorithm_test.h(892,9): message : 查看对正在编译的函数 模板 实例化“void mystl::random_shuffle<int*,mystl::test::algorithm_test::random_shuffle_test_TEST::Run::<lambda_1>>(RandomAccessIterator,RandomAccessIterator,RandomNumberGenerator)”的引用
          with
          [
              RandomAccessIterator=int *,
              RandomNumberGenerator=mystl::test::algorithm_test::random_shuffle_test_TEST::Run::<lambda_1>
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(492,25): warning C4267: “参数”: 从“size_t”转换到“unsigned long”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(491,12): message : 在编译 类 模板 成员函数“mystl::hashtable<mystl::pair<const Key,T>,Key,HashFcn,mystl::Select1st<mystl::pair<const Key,T>>,EqualKey,Alloc>::size_type mystl::hashtable<mystl::pair<const Key,T>,Key,HashFcn,mystl::Select1st<mystl::pair<const Key,T>>,EqualKey,Alloc>::next_size(mystl::hashtable<mystl::pair<const Key,T>,Key,HashFcn,mystl::Select1st<mystl::pair<const Key,T>>,EqualKey,Alloc>::size_type) const”时
          with
          [
              Key=int,
              T=int,
              HashFcn=mystl::hash<int>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(965,22): message : 请参阅 "mystl::hashtable<mystl::pair<const Key,T>,Key,HashFcn,mystl::Select1st<mystl::pair<const Key,T>>,EqualKey,Alloc>::initialize_buckets" 中对 "mystl::hashtable<mystl::pair<const Key,T>,Key,HashFcn,mystl::Select1st<mystl::pair<const Key,T>>,EqualKey,Alloc>::next_size" 的第一个引用
          with
          [
              Key=int,
              T=int,
              HashFcn=mystl::hash<int>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(353,21): message : 请参阅 "mystl::hashtable<mystl::pair<const Key,T>,Key,HashFcn,mystl::Select1st<mystl::pair<const Key,T>>,EqualKey,Alloc>::hashtable" 中对 "mystl::hashtable<mystl::pair<const Key,T>,Key,HashFcn,mystl::Select1st<mystl::pair<const Key,T>>,EqualKey,Alloc>::initialize_buckets" 的第一个引用
          with
          [
              Key=int,
              T=int,
              HashFcn=mystl::hash<int>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_map.h(356,73): message : 请参阅 "mystl::unordered_multimap<int,int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::unordered_multimap" 中对 "mystl::hashtable<mystl::pair<const Key,T>,Key,HashFcn,mystl::Select1st<mystl::pair<const Key,T>>,EqualKey,Alloc>::hashtable" 的第一个引用
          with
          [
              Value=int
          ]
          and
          [
              Key=int,
              T=int,
              HashFcn=mystl::hash<int>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_map_test.h(126,42): message : 请参阅 "mystl::unordered_map_test::unordered_multimap_test" 中对 "mystl::unordered_multimap<int,int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::unordered_multimap" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(601,27): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(599,110): message : 在编译 类 模板 成员函数“mystl::pair<mystl::hashtable_iterator<Value,Key,HashFcn,ExtractKey,EqualKey,Alloc>,bool> mystl::hashtable<Value,Key,HashFcn,ExtractKey,EqualKey,Alloc>::insert_unique_noresize(const int &)”时
          with
          [
              Value=int,
              Key=int,
              HashFcn=mystl::hash<int>,
              ExtractKey=mystl::identity<int>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(705,25): message : 请参阅 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::insert_unique" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::insert_unique_noresize" 的第一个引用
          with
          [
              Value=int,
              HashFcn=mystl::hash<int>,
              Key=int,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set.h(106,19): message : 请参阅 "mystl::unordered_set<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::operator =" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::insert_unique" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set_test.h(33,7): message : 请参阅 "mystl::unordered_set_test::unordered_set_test" 中对 "mystl::unordered_set<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::operator =" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(542,70): message : 在编译 类 模板 成员函数“mystl::hashtable_iterator<Value,Key,HashFcn,ExtractKey,EqualKey,Alloc> mystl::hashtable<Value,Key,HashFcn,ExtractKey,EqualKey,Alloc>::begin(void)”时
          with
          [
              Value=int,
              Key=int,
              HashFcn=mystl::hash<int>,
              ExtractKey=mystl::identity<int>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set.h(348,3): message : 请参阅 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::begin" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::begin" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set_test.h(121,2): message : 请参阅 "mystl::unordered_set_test::unordered_multiset_test" 中对 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::begin" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(608,10): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(626,27): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(624,109): message : 在编译 类 模板 成员函数“mystl::hashtable_iterator<Value,Key,HashFcn,ExtractKey,EqualKey,Alloc> mystl::hashtable<Value,Key,HashFcn,ExtractKey,EqualKey,Alloc>::insert_equal_noresize(const int &)”时
          with
          [
              Value=int,
              Key=int,
              HashFcn=mystl::hash<int>,
              ExtractKey=mystl::identity<int>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(716,24): message : 请参阅 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::insert_equal" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::insert_equal_noresize" 的第一个引用
          with
          [
              Value=int,
              HashFcn=mystl::hash<int>,
              Key=int,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set.h(340,18): message : 请参阅 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::operator =" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::insert_equal" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set_test.h(118,7): message : 请参阅 "mystl::unordered_set_test::unordered_multiset_test" 中对 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::operator =" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(638,10): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(1024,12): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(1023,87): message : 在编译 类 模板 成员函数“void mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::resize(mystl::hashtable<Value,Key,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::size_type)”时
          with
          [
              Value=int,
              HashFcn=mystl::hash<int>,
              Key=int,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(703,8): message : 请参阅 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::insert_unique" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::resize" 的第一个引用
          with
          [
              Value=int,
              HashFcn=mystl::hash<int>,
              Key=int,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set.h(106,19): message : 请参阅 "mystl::unordered_set<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::operator =" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::insert_unique" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set_test.h(33,7): message : 请参阅 "mystl::unordered_set_test::unordered_set_test" 中对 "mystl::unordered_set<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::operator =" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(1031,31): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(1035,15): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(1036,26): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(1037,12): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(1045,26): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(1082,25): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(1081,109): message : 在编译 类 模板 成员函数“void mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::erase_buckets(mystl::hashtable<Value,Key,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::size_type,mystl::hashtable_node<Value> *)”时
          with
          [
              Value=int,
              HashFcn=mystl::hash<int>,
              Key=int,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(826,17): message : 请参阅 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::erase" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::erase_buckets" 的第一个引用
          with
          [
              Value=int,
              HashFcn=mystl::hash<int>,
              Key=int,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set.h(435,11): message : 请参阅 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::erase" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::erase" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set_test.h(126,2): message : 请参阅 "mystl::unordered_set_test::unordered_multiset_test" 中对 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::erase" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(1084,11): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(1086,17): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(1061,25): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(1060,125): message : 在编译 类 模板 成员函数“void mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::erase_buckets(mystl::hashtable<Value,Key,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::size_type,mystl::hashtable_node<Value> *,mystl::hashtable_node<Value> *)”时
          with
          [
              Value=int,
              HashFcn=mystl::hash<int>,
              Key=int,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(821,16): message : 请参阅 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::erase" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::erase_buckets" 的第一个引用
          with
          [
              Value=int,
              HashFcn=mystl::hash<int>,
              Key=int,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set.h(435,11): message : 请参阅 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::erase" 中对 "mystl::hashtable<Value,Value,HashFcn,mystl::identity<Key>,EqualKey,Alloc>::erase" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_set_test.h(126,2): message : 请参阅 "mystl::unordered_set_test::unordered_multiset_test" 中对 "mystl::unordered_multiset<int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::erase" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\algo.h(1980,54): warning C4554: “>>”: 检查运算符优先级是否存在的可能的错误；使用括号阐明优先级
F:\c++ project\my_tiny_stl\MySTL\algo.h(2010,10): message : 查看对正在编译的函数 模板 实例化“ForwardIterator *mystl::stable_partition_adaptive<ForwardIterator,UnaryPredicate,T*,int>(ForwardIterator,ForwardIterator,UnaryPredicate,Distance,Pointer,Distance)”的引用
          with
          [
              ForwardIterator=int *,
              UnaryPredicate=mystl::test::algorithm_test::stable_partition_test_TEST::Run::<lambda_2>,
              T=mystl::iterator_traits<int *>::difference_type,
              Distance=int,
              Pointer=mystl::iterator_traits<int *>::difference_type *
          ]
F:\c++ project\my_tiny_stl\MySTL\algo.h(2020,9): message : 查看对正在编译的函数 模板 实例化“ForwardIterator mystl::stable_partition_aux<ForwardIterator,UnaryPredicate,int,mystl::iterator_traits<Iterator>::difference_type>(ForwardIterator,ForwardIterator,UnaryPredicate,Distance *,T *)”的引用
          with
          [
              ForwardIterator=int *,
              UnaryPredicate=mystl::test::algorithm_test::stable_partition_test_TEST::Run::<lambda_2>,
              Iterator=int *,
              Distance=int,
              T=mystl::iterator_traits<int *>::difference_type
          ]
F:\c++ project\my_tiny_stl\MySTL\algorithm_test.h(1064,9): message : 查看对正在编译的函数 模板 实例化“ForwardIterator *mystl::stable_partition<int*,mystl::test::algorithm_test::stable_partition_test_TEST::Run::<lambda_2>>(ForwardIterator,ForwardIterator,UnaryPredicate)”的引用
          with
          [
              ForwardIterator=int *,
              UnaryPredicate=mystl::test::algorithm_test::stable_partition_test_TEST::Run::<lambda_2>
          ]
F:\c++ project\my_tiny_stl\MySTL\algo.h(1968,128): warning C4554: “>>”: 检查运算符优先级是否存在的可能的错误；使用括号阐明优先级
F:\c++ project\my_tiny_stl\MySTL\algo.h(2013,10): message : 查看对正在编译的函数 模板 实例化“ForwardIterator *mystl::inplace_stable_partition<ForwardIterator,UnaryPredicate,int>(ForwardIterator,ForwardIterator,UnaryPredicate,Distance)”的引用
          with
          [
              ForwardIterator=int *,
              UnaryPredicate=mystl::test::algorithm_test::stable_partition_test_TEST::Run::<lambda_2>,
              Distance=int
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(1101,31): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\unordered_map.h(511,16): message : 查看对正在编译的函数 模板 实例化“bool mystl::operator ==<mystl::pair<const Key,T>,Key,HashFcn,mystl::Select1st<mystl::pair<const Key,T>>,EqualKey,Alloc>(const mystl::hashtable<mystl::pair<const Key,T>,Key,HashFcn,mystl::Select1st<mystl::pair<const Key,T>>,EqualKey,Alloc> &,const mystl::hashtable<mystl::pair<const Key,T>,Key,HashFcn,mystl::Select1st<mystl::pair<const Key,T>>,EqualKey,Alloc> &)”的引用
          with
          [
              Key=int,
              T=int,
              HashFcn=mystl::hash<int>,
              EqualKey=mystl::equal_to<int>,
              Alloc=mystl::alloc
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_map.h(517,15): message : 查看对正在编译的函数 模板 实例化“bool mystl::operator ==<int,int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>(const mystl::unordered_multimap<int,int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc> &,const mystl::unordered_multimap<int,int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc> &)”的引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_map.h(375,13): message : 查看对正在编译的函数 模板 实例化“bool mystl::operator !=<int,int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>(const mystl::unordered_multimap<int,int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc> &,const mystl::unordered_multimap<int,int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc> &)”的引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_map.h(374,22): message : 在编译 类 模板 成员函数“mystl::unordered_multimap<int,int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc> &mystl::unordered_multimap<int,int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::operator =(mystl::unordered_multimap<int,int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc> &)”时
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_map_test.h(123,7): message : 请参阅 "mystl::unordered_map_test::unordered_multimap_test" 中对 "mystl::unordered_multimap<int,int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>::operator =" 的第一个引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\unordered_map_test.h(112,38): message : 查看对正在编译的 类 模板 实例化“mystl::unordered_multimap<int,int,mystl::hash<int>,mystl::equal_to<Value>,mystl::alloc>”的引用
          with
          [
              Value=int
          ]
F:\c++ project\my_tiny_stl\MySTL\hashtable.h(1102,31): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
F:\c++ project\my_tiny_stl\MySTL\deque.h(1427,19): warning C4018: “<”: 有符号/无符号不匹配
F:\c++ project\my_tiny_stl\MySTL\deque.h(1425,91): message : 在编译 类 模板 成员函数“void mystl::deque<int,mystl::alloc>::insert_aux(mystl::deque_iterator<T,T &,T *>,mystl::deque<T,mystl::alloc>::size_type,const int &)”时
          with
          [
              T=int
          ]
F:\c++ project\my_tiny_stl\MySTL\deque.h(1358,13): message : 请参阅 "mystl::deque<int,mystl::alloc>::fill_insert" 中对 "mystl::deque<int,mystl::alloc>::insert_aux" 的第一个引用
F:\c++ project\my_tiny_stl\MySTL\deque.h(829,13): message : 请参阅 "mystl::deque<int,mystl::alloc>::insert" 中对 "mystl::deque<int,mystl::alloc>::fill_insert" 的第一个引用
F:\c++ project\my_tiny_stl\MySTL\deque.h(650,9): message : 请参阅 "mystl::deque<int,mystl::alloc>::resize" 中对 "mystl::deque<int,mystl::alloc>::insert" 的第一个引用
F:\c++ project\my_tiny_stl\MySTL\deque_test.h(54,2): message : 请参阅 "mystl::deque_test::deque_test" 中对 "mystl::deque<int,mystl::alloc>::resize" 的第一个引用
F:\c++ project\my_tiny_stl\MySTL\deque.h(983,73): message : 在编译 类 模板 成员函数“void mystl::deque<int,mystl::alloc>::create_nodes(int **,int **)”时
F:\c++ project\my_tiny_stl\MySTL\deque.h(966,15): message : 请参阅 "mystl::deque<int,mystl::alloc>::initialize_map" 中对 "mystl::deque<int,mystl::alloc>::create_nodes" 的第一个引用
F:\c++ project\my_tiny_stl\MySTL\deque.h(509,16): message : 请参阅 "mystl::deque<int,mystl::alloc>::deque" 中对 "mystl::deque<int,mystl::alloc>::initialize_map" 的第一个引用
F:\c++ project\my_tiny_stl\MySTL\deque_test.h(21,22): message : 请参阅 "mystl::deque_test::deque_test" 中对 "mystl::deque<int,mystl::alloc>::deque" 的第一个引用
F:\c++ project\my_tiny_stl\MySTL\deque.h(562,32): message : 在编译 类 模板 成员函数“mystl::deque_iterator<T,const T &,const T *> mystl::deque<T,mystl::alloc>::begin(void) const”时
          with
          [
              T=int
          ]
F:\c++ project\my_tiny_stl\MySTL\deque.h(534,9): message : 请参阅 "mystl::deque<int,mystl::alloc>::operator =" 中对 "mystl::deque<int,mystl::alloc>::begin" 的第一个引用
F:\c++ project\my_tiny_stl\MySTL\deque_test.h(25,5): message : 请参阅 "mystl::deque_test::deque_test" 中对 "mystl::deque<int,mystl::alloc>::operator =" 的第一个引用
F:\c++ project\my_tiny_stl\MySTL\deque.h(507,61): message : 在编译 类 模板 成员函数“mystl::deque<int,mystl::alloc>::deque(int *,int *)”时
F:\c++ project\my_tiny_stl\MySTL\deque_test.h(21,22): message : 请参阅 "mystl::deque_test::deque_test" 中对 "mystl::deque<int,mystl::alloc>::deque" 的第一个引用
F:\c++ project\my_tiny_stl\MySTL\deque_test.h(18,20): message : 查看对正在编译的 类 模板 实例化“mystl::deque<int,mystl::alloc>”的引用
F:\c++ project\my_tiny_stl\MySTL\deque.h(1432,21): warning C4018: “>=”: 有符号/无符号不匹配
F:\c++ project\my_tiny_stl\MySTL\deque.h(1456,20): warning C4018: “>”: 有符号/无符号不匹配
F:\c++ project\my_tiny_stl\MySTL\algo.h(2280,19): warning C4018: “<”: 有符号/无符号不匹配
F:\c++ project\my_tiny_stl\MySTL\algo.h(2297,3): message : 查看对正在编译的函数 模板 实例化“void mystl::merge_sort_with_buffer<RandomAccessIterator,Pointer,mystl::iterator_traits<Iterator>::difference_type>(RandomAccessIterator,RandomAccessIterator,Pointer,Distance *)”的引用
          with
          [
              RandomAccessIterator=int *,
              Pointer=int *,
              Iterator=int *,
              Distance=mystl::iterator_traits<int *>::difference_type
          ]
F:\c++ project\my_tiny_stl\MySTL\algo.h(2308,3): message : 查看对正在编译的函数 模板 实例化“void mystl::stable_sort_adaptive<RandomAccessIterator,T*,mystl::iterator_traits<Iterator>::difference_type>(RandomAccessIterator,RandomAccessIterator,Pointer,Distance)”的引用
          with
          [
              RandomAccessIterator=int *,
              T=int,
              Iterator=int *,
              Pointer=int *,
              Distance=mystl::iterator_traits<int *>::difference_type
          ]
F:\c++ project\my_tiny_stl\MySTL\algo.h(2315,2): message : 查看对正在编译的函数 模板 实例化“void mystl::stable_sort_aux<RandomAccessIterator,int,mystl::iterator_traits<Iterator>::difference_type>(RandomAccessIterator,RandomAccessIterator,T *,Distance *)”的引用
          with
          [
              RandomAccessIterator=int *,
              Iterator=int *,
              T=int,
              Distance=mystl::iterator_traits<int *>::difference_type
          ]
F:\c++ project\my_tiny_stl\MySTL\algorithm_test.h(1110,9): message : 查看对正在编译的函数 模板 实例化“void mystl::stable_sort<int*>(RandomAccessIterator,RandomAccessIterator)”的引用
          with
          [
              RandomAccessIterator=int *
          ]
F:\c++ project\my_tiny_stl\MySTL\algo.h(2359,19): warning C4018: “<”: 有符号/无符号不匹配
F:\c++ project\my_tiny_stl\MySTL\algo.h(2377,3): message : 查看对正在编译的函数 模板 实例化“void mystl::merge_sort_with_buffer<RandomAccessIterator,Pointer,mystl::iterator_traits<Iterator>::difference_type,BinaryPredicate>(RandomAccessIterator,RandomAccessIterator,Pointer,Distance *,BinaryPredicate)”的引用
          with
          [
              RandomAccessIterator=int *,
              Pointer=int *,
              Iterator=int *,
              BinaryPredicate=std::greater<int>,
              Distance=mystl::iterator_traits<int *>::difference_type
          ]
F:\c++ project\my_tiny_stl\MySTL\algo.h(2388,3): message : 查看对正在编译的函数 模板 实例化“void mystl::stable_sort_adaptive<RandomAccessIterator,T*,mystl::iterator_traits<Iterator>::difference_type,BinaryPredicate>(RandomAccessIterator,RandomAccessIterator,Pointer,Distance,BinaryPredicate)”的引用
          with
          [
              RandomAccessIterator=int *,
              T=int,
              Iterator=int *,
              BinaryPredicate=std::greater<int>,
              Pointer=int *,
              Distance=mystl::iterator_traits<int *>::difference_type
          ]
F:\c++ project\my_tiny_stl\MySTL\algo.h(2395,2): message : 查看对正在编译的函数 模板 实例化“void mystl::stable_sort_aux<RandomAccessIterator,int,mystl::iterator_traits<Iterator>::difference_type,BinaryPredicate>(RandomAccessIterator,RandomAccessIterator,T *,Distance *,BinaryPredicate)”的引用
          with
          [
              RandomAccessIterator=int *,
              Iterator=int *,
              BinaryPredicate=std::greater<int>,
              T=int,
              Distance=mystl::iterator_traits<int *>::difference_type
          ]
F:\c++ project\my_tiny_stl\MySTL\algorithm_test.h(1114,9): message : 查看对正在编译的函数 模板 实例化“void mystl::stable_sort<int*,std::greater<int>>(RandomAccessIterator,RandomAccessIterator,BinaryPredicate)”的引用
          with
          [
              RandomAccessIterator=int *,
              BinaryPredicate=std::greater<int>
          ]
F:\c++ project\my_tiny_stl\MySTL\algo.h(2263,22): warning C4018: “>=”: 有符号/无符号不匹配
F:\c++ project\my_tiny_stl\MySTL\algo.h(2276,2): message : 查看对正在编译的函数 模板 实例化“void mystl::chunk_insertion_sort<RandomAccessIterator,size_t>(RandomAccessIterator,RandomAccessIterator,Distance)”的引用
          with
          [
              RandomAccessIterator=int *,
              Distance=size_t
          ]
F:\c++ project\my_tiny_stl\MySTL\algo.h(2297,3): message : 查看对正在编译的函数 模板 实例化“void mystl::merge_sort_with_buffer<RandomAccessIterator,Pointer,mystl::iterator_traits<Iterator>::difference_type>(RandomAccessIterator,RandomAccessIterator,Pointer,Distance *)”的引用
          with
          [
              RandomAccessIterator=int *,
              Pointer=int *,
              Iterator=int *,
              Distance=mystl::iterator_traits<int *>::difference_type
          ]
F:\c++ project\my_tiny_stl\MySTL\algo.h(2253,22): warning C4018: “>=”: 有符号/无符号不匹配
F:\c++ project\my_tiny_stl\MySTL\algo.h(2281,3): message : 查看对正在编译的函数 模板 实例化“void mystl::merge_sort_loop<RandomAccessIterator,Pointer,size_t>(RandomAccessIterator1,RandomAccessIterator1,RandomAccessIterator2,Distance)”的引用
          with
          [
              RandomAccessIterator=int *,
              Pointer=int *,
              RandomAccessIterator1=int *,
              RandomAccessIterator2=int *,
              Distance=size_t
          ]
F:\c++ project\my_tiny_stl\MySTL\algo.h(2344,22): warning C4018: “>=”: 有符号/无符号不匹配
F:\c++ project\my_tiny_stl\MySTL\algo.h(2358,2): message : 查看对正在编译的函数 模板 实例化“void mystl::chunk_insertion_sort<RandomAccessIterator,size_t,BinaryPredicate>(RandomAccessIterator,RandomAccessIterator,Distance,BinaryPredicate)”的引用
          with
          [
              RandomAccessIterator=int *,
              BinaryPredicate=std::greater<int>,
              Distance=size_t
          ]
F:\c++ project\my_tiny_stl\MySTL\algo.h(2377,3): message : 查看对正在编译的函数 模板 实例化“void mystl::merge_sort_with_buffer<RandomAccessIterator,Pointer,mystl::iterator_traits<Iterator>::difference_type,BinaryPredicate>(RandomAccessIterator,RandomAccessIterator,Pointer,Distance *,BinaryPredicate)”的引用
          with
          [
              RandomAccessIterator=int *,
              Pointer=int *,
              Iterator=int *,
              BinaryPredicate=std::greater<int>,
              Distance=mystl::iterator_traits<int *>::difference_type
          ]
F:\c++ project\my_tiny_stl\MySTL\algo.h(2334,22): warning C4018: “>=”: 有符号/无符号不匹配
F:\c++ project\my_tiny_stl\MySTL\algo.h(2360,3): message : 查看对正在编译的函数 模板 实例化“void mystl::merge_sort_loop<RandomAccessIterator,Pointer,size_t,BinaryPredicate>(RandomAccessIterator1,RandomAccessIterator1,RandomAccessIterator2,Distance,BinaryPredicate)”的引用
          with
          [
              RandomAccessIterator=int *,
              Pointer=int *,
              BinaryPredicate=std::greater<int>,
              RandomAccessIterator1=int *,
              RandomAccessIterator2=int *,
              Distance=size_t
          ]
F:\c++ project\my_tiny_stl\MySTL\algobase.h(80,13): warning C4244: “=”: 从“T”转换到“int”，可能丢失数据
          with
          [
              T=mystl::iterator_traits<int *>::difference_type
          ]
F:\c++ project\my_tiny_stl\MySTL\algobase.h(86,9): message : 查看对正在编译的函数 模板 实例化“OutputIterator mystl::__copy<InputIterator,OutputIterator>(RandomAccessIterator,RandomAccessIterator,OutputIterator,mystl::random_iterator_tag)”的引用
          with
          [
              OutputIterator=int *,
              InputIterator=mystl::iterator_traits<int *>::difference_type *,
              RandomAccessIterator=mystl::iterator_traits<int *>::difference_type *
          ]
F:\c++ project\my_tiny_stl\MySTL\algobase.h(101,9): message : 查看对正在编译的函数 模板 实例化“OutputIterator mystl::copy_aux<InputIterator,OutputIterator>(InputIterator,InputIterator,OutputIterator)”的引用
          with
          [
              OutputIterator=int *,
              InputIterator=mystl::iterator_traits<int *>::difference_type *
          ]
F:\c++ project\my_tiny_stl\MySTL\algo.h(1994,3): message : 查看对正在编译的函数 模板 实例化“OutputIterator mystl::copy<Pointer,ForwardIterator>(InputIterator,InputIterator,OutputIterator)”的引用
          with
          [
              OutputIterator=int *,
              Pointer=mystl::iterator_traits<int *>::difference_type *,
              ForwardIterator=int *,
              InputIterator=mystl::iterator_traits<int *>::difference_type *
          ]
F:\c++ project\my_tiny_stl\MySTL\algo.h(2010,10): message : 查看对正在编译的函数 模板 实例化“ForwardIterator *mystl::stable_partition_adaptive<ForwardIterator,UnaryPredicate,T*,int>(ForwardIterator,ForwardIterator,UnaryPredicate,Distance,Pointer,Distance)”的引用
          with
          [
              ForwardIterator=int *,
              UnaryPredicate=mystl::test::algorithm_test::stable_partition_test_TEST::Run::<lambda_2>,
              T=mystl::iterator_traits<int *>::difference_type,
              Distance=int,
              Pointer=mystl::iterator_traits<int *>::difference_type *
          ]
  正在生成代码
  3 of 3176 functions (<0.1%) were compiled, the rest were copied from previous compilation.
    0 functions were new in current compilation
    12 functions had inline decision re-evaluated but remain unchanged
  已完成代码的生成
  MySTL.vcxproj -> F:\c++ project\my_tiny_stl\MySTL\x64\Release\MySTL.exe
